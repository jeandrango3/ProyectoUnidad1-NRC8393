# -*- coding: utf-8 -*-
"""Entidad_Agencia_ProyectoUnidad1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zuSS_d7JZgems1nay9Rxo_i9euVgmLXc
"""
#Instalamos las librerias necesarias para crear datos sintecticos 
#la mas importante faker
!pip install Faker
import pandas as pd
import uuid
import random
from faker import Faker
import datetime

#Declaramos una variable que va a almacenar la cantidad de datos que deseamos crear 
num_usuarios = 5000

# Creamos la lista de atributos de nuestra entidad 
features = [
    "id_Agencia",
    "Nombre_Agencia",
    "Status_Agencia",
    "Telefono_Agencia",
    "Correo_Agencia",
   
]
#Ordenamos nuestros datos  en columnas dentro del Dataframe 
df = pd.DataFrame(columns=features)

#Creamos un una cadena de numeros aleatorios para el id 
df['id_Agencia'] = [uuid.uuid4().hex for i in range(num_usuarios)]

#Verificamos que los id creados anteriormente sean unicos 
print(df['id_Agencia'].nunique()==num_usuarios)

#Definimos faker.company para generar nombres de companias aleatorias
df['Nombre_Agencia'] = [faker.company() for i in range(num_usuarios)]

#Para el estado de la empresa definimos e tipos de estados 
Status= ["Activo", "Inactivo", "Pendiente"]
#Particionamos la cantidad total de usuarios para el numero de opciones,
df['Status_Agencia'] = random.choices(
    Status, 
    weights=(2000,2000,1000), 
    k=num_usuarios
)

#Definimos faker.number para crear numeros de telefono falsos 
df['Telefono_Agencia']=[faker.phone_number() for i in range(num_usuarios)]

def emailGen(company, duplicateFound=False):
    """
    Generamos email falsos con la ayuda del nombre de la Agencia
    dom= El dominio de direccion de correo electronico.
    company= Admite mayusculas y minusculas.
    chars= Permite el uso de caracteres especiales como el punto y el guion bajo.
    
    returns
    
    El nombre de la agencia unido al dominio planteado 
    
    """
    # Creamos un nombre de dominio 
    dom = "@financieramies.com"
    
    # Permite  Minuscular y espacios 
    company = company.lower().split(" ")
    
    # Permite caracteres especiales como el punto y el guion bajo 
    chars = [".", "_"]
    
    new_name = name[0] + random.choice(chars) + name[1] 
    
    # verfica que los correos no se encuentren repetidos
    if duplicateFound:
        
        # Genera un numero aleatorio al final en caso de tener usuarios repetidos
        num = random.randint(0,100)
        
        new_name = new_name + str(num)
        
    # Regresa el nombre de la agencia unido al nombre de dominio 
    return new_name + dom

emails = []

for name in df['Nombre_Agencia']:
    
    # Genera el email 
    email = emailGen(company)
    
    # se repite hasta crear todos los correos de todos los usuarios solicitados 
    while email in emails:
        
        # Crea un email con un numero random 
        email = emailGen(company, duplicateFound=True)
    
    # AÃ±ade un email a la lista 
    emails.append(email)
    
df['Correo_Agencia'] = emails

#Definimos el tipo de documento donde se va a crear nuestro dataframe 
df.to_csv('Agencias_usuarios.csv')
