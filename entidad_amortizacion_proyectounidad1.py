# -*- coding: utf-8 -*-
"""Entidad_Amortizacion_ProyectoUnidad1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DUnmp5_2uABtRLc74LcEJZm_PHJJB-IK
"""
#Instalamos e importamos librerias
!pip install Faker
#Esta liberia nos ayuda a crear un dataframe
import pandas as pd
#Genera cadena de caracteres de manera aleatoria
import uuid
#Produce datos random
import random
#Crea datos falsos
from faker import Faker
#Nos ayuda a trabajar con la fecha y hora
import datetime

#Declaramos y definimos la cantidad de datos que deseamos generar 
num_usuarios = 5000

# Creamos una lista basada en los atributos de nuestra entidad
features = [
     " Id_Amortizacion",
    "Fecha_Transaccion_Amortizacion",
    "Capital_Amortizacion",
    "Numero_Total_Pagos",
    "Interes_Periodico", 
    "Estado",

]# Crea el data frame ordenando los atributos en columnas
df = pd.DataFrame(columns=features)

#Creamos una cadena de caracteres de forma aleatoria 
df['Id_Amortizacion'] = [uuid.uuid4().int for i in range(num_usuarios)]

#Identificamos que los id generados sean unicos 
print(df['Id_Amortizacion'].nunique()==num_usuarios)

def random_dob(start, end, n):
    """
    Generamos una lista de fechas con un inicio y un fin y el numero de repeticiones que va  tener 
    
    Return 
    times 
    """
    
    # Definimos el formato de la fecha
    frmt = "%Y-%m-%d"
    
    # Genera el rango de inicio y final de la fecha 
    stime = datetime.datetime.strptime(start, frmt)
    etime = datetime.datetime.strptime(end, frmt)
    
    
    td = etime - stime
    
    # 
    times = [(random.random() * td + stime).strftime(frmt) for _ in range(n)]
    
    return times

df['Fecha_Trasaccion_Amortizacion'] = random_dob("2000-01-01", "2022-01-01", num_usuarios)

#Definimos tres montos de pago 
Monto = ["$1200", "$2000","$600"]

df['Capital_Amortizacion'] = random.choices(
    Monto, 
    weights=(2500,2000,500), 
    k=num_usuarios
)
#Porcentaje de interes que cobra el estado 
interes = ["%8", "%10", "%12"]

df['Interes_Periodico'] = random.choices(
    interes, 
    weights=(2500,1500,1000), 
    k=num_usuarios
)

#Coutas mensuales  producidas a traves de la generacion de un credito
cuota= ["$100", "$110", "$150"]

df['Numero_Total_Pagos'] = random.choices(
    cuota, 
    weights=(2500,1000, 1500), 
    k=num_usuarios
)


#Se verifica el estado de la couta 
Estado = ["Vigente", "No Vigente"]

df['Estado'] = random.choices(
    Estado, 
    weights=(2500,2500), 
    k=num_usuarios
)

df.to_csv('TabladeArmortizacion.csv')
