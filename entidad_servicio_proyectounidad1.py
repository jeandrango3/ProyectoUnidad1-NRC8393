# -*- coding: utf-8 -*-
"""Entidad_Servicio_ProyectoUnidad1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TeLXPimyN8WkcWqfRslwsWX8DiSpaDZK
"""
#Importamos librerias 
#Instalamos faker para crear datos falsos 
!pip install Faker
#Importamos la libreria pandas para crear dataframe
import pandas as pd
#Genera una cadena de numeros aleatorios
import uuid
#Crea datos random
import random
from faker import Faker
#Nos a ayuda a trabajar con la fecha y hora 
import datetime

#Definimos el numero de datos que queremos crear 
num_usuarios = 5000

# Creamos una lista con los atributos planteados
features = [
    "id_Servicio",
    "Nombre_Servicio",
    "Descripcion_Servicio",
    "Status_Servicio",
    "Tipo_Servicio",
    "Monto_Servicio",
    "Fecha_Servicio" 

]# Ordena nuestra lista en columnas para formar una tabla 
df = pd.DataFrame(columns=features)

#Verifica que los id creados sean unicos y que no esten repetidos
df['id_Servicio'] = [uuid.uuid4().int for i in range(num_usuarios)]
print(df['id_Servicio'].nunique()==num_usuarios)

#Vamos a definir tres tipos de servicios para elegir el nombre del servicio a realizar
servicios = ["Atencion al socio", " Credito de desarrollo humano", "Transacciones"]
#Utilizamos la libreria random para una elección aleatoria
df['Nombre_Servicio'] = random.choices(
    servicios, 
    weights=(500,2500 ,2000), 
    k=num_usuarios
)

#Llamamos a la libreria faker
faker = Faker()
"""
faker.sentence nos va a generar oraciones de descripción falsas y aleatorias

parametros:
num_usuarios =  debido a que la funcion se va a repetir hasta que cumpla con la cantidad de numero de usuarios definida
__________

devuelve descripciones falsas
"""
df['Descripcion_Servicio']=[faker.sentence() for i in range(num_usuarios)]


#Establecemos tres tipos de estados 
status = ["Realizado", "Rechazado", "En espera.."]

df['Status_Servicio'] = random.choices(
    status, 
    weights=(2500,500, 1500), 
    k=num_usuarios
)

#Defenimos cuatro tipos de servicios 
tipo = ["Debito", "Credito", "Consulta","Aporte"]

df['Tipo_Servicio'] = random.choices(
    tipo, 
    weights=(2500,1000, 1000,500), 
    k=num_usuarios
)

#Segun la investigación realizada se pueden otorgar tres tipos de monto como prestamo de desarrollo humano 
Monto = ["$2000", "$1200", "$600"]

df['Monto_Servicio'] = random.choices(
    Monto, 
    weights=(2500,500, 2000), 
    k=num_usuarios
)

def random_dob(start, end, n):
    """
    Generamos una función en donde definimosel rango de años que la funcion radomica puede generar 

    Parametros:
    frmr = formato para la generación de fecha 
    stime = inicio de fechas
    etime = final de fechas
  
    return
    __________

    devuelve el tiempo es decir la fecha 
    """
    
    # formato 
    frmt = "%Y-%m-%d"
    

    stime = datetime.datetime.strptime(start, frmt)
    etime = datetime.datetime.strptime(end, frmt)
    
    td = etime - stime
    
    times = [(random.random() * td + stime).strftime(frmt) for _ in range(n)]
    
    return times

df['Fecha_Servicio'] = random_dob("2000-01-01", "2022-01-01", num_usuarios)

#Deefinimos el tipo de documento donde vamos a almacenar datos 
df.to_csv('Servicios.csv')